import React, { useEffect, useState } from 'react';import { useRouter } from 'next/router';import Layout from '@/components/layout/Layout';import { checkPaidVideoAccess } from '@/features/paid-videos/api';interface VideoData {  type?: 'youtube' | 'file';  video_id?: string;  url?: string;}export default function PaidVideoViewer() {  const router = useRouter();  const [allowed, setAllowed] = useState<boolean | null>(null);  const [videoData, setVideoData] = useState<VideoData | null>(null);  const [loading, setLoading] = useState(true);  const [error, setError] = useState<string | null>(null);  useEffect(() => {    const id = parseInt(router.query.id as string, 10);    if (!Number.isFinite(id)) return;    (async () => {      try {        const a = await checkPaidVideoAccess(id);        setAllowed(a.data.has_access);        if (a.data.has_access) {          const response = await fetch(`/api/v1/paid_videos/stream?paid_video_id=${id}`, {            credentials: 'include',            headers: {              'Accept': 'application/json',              'Content-Type': 'application/json',            },          });          if (response.ok) {            const data = await response.json();            setVideoData(data);          } else {            throw new Error('Failed to load video');          }        }      } catch (err) {        console.error('Error loading video:', err);        setError('Failed to load video');      } finally {        setLoading(false);      }    })();  }, [router.query.id]);  if (allowed === null || loading) return <div className="container py-12">Loading...</div>;  if (!allowed) return <div className="container py-12">Nemáte přístup k tomuto videu.</div>;  if (error) return <div className="container py-12 text-red-400">{error}</div>;  const renderVideo = () => {    if (videoData?.type === 'youtube' && videoData.video_id) {      return (        <div className="relative aspect-video bg-black rounded">          <iframe            src={`https://www.youtube.com/embed/${videoData.video_id}?autoplay=1&rel=0&modestbranding=1`}            title="Video"            className="w-full h-full rounded"            frameBorder="0"            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"            allowFullScreen          />        </div>      );    }    if (videoData?.url) {      return (        <video           controls           className="w-full max-w-4xl mx-auto rounded"           src={videoData.url}           crossOrigin="use-credentials"         />      );    }    return <div className="text-center text-gray-400">No video available</div>;  };  return (    <div className="container py-12">      {renderVideo()}    </div>  );}PaidVideoViewer.getLayout = function getLayout(page: React.ReactElement) {  return <Layout>{page}</Layout>;};export async function getServerSideProps() {  return {};}