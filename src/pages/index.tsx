import Button from '@/components/UI/button/Button';import { H1, H2 } from '@/components/UI/typography/Typography';import Layout from '@/components/layout/Layout';import { IconCards, IconHoroscope, IconLogoFilled, IconNumerology, IconPeopleCircle, IconStreams } from '@/components/UI/Icons';import BluredCircle from '@/components/UI/shapes/BluredCircle';import { route } from '@/services/routes';import useUser from '@/features/user/hooks/useUser';import useStreams from '@/hooks/data/useStreams';import { useEffect, useState } from 'react';import { useRouter } from 'next/router';import HowItWorksModule from '@/components/general/HowItWorksModule';import GuidesLandingSlider from '@/components/general/GuidesLandingSlider';import Link from 'next/link';import { differenceInMinutes } from 'date-fns';export default function Home() {  const { user } = useUser();  const { data: streams } = useStreams();  const [showStreamButton, setShowStreamButton] = useState(false);  const router = useRouter();  useEffect(() => {    if (!showStreamButton && streams?.length && streams[0].guideProfile.id === user?.guide_profile?.id) {      const interval = setInterval(() => {        const streamStartTime = new Date(streams[0].happening_at);        const currentTime = new Date();        const timeDiff = differenceInMinutes(streamStartTime, currentTime);        setShowStreamButton(timeDiff <= 15);      }, 10000);      return () => clearInterval(interval);    }  }, [streams, showStreamButton])  const handleRedirect = () => {    if (!streams?.length) return;    router.push({      pathname: route.livestreamHost(streams[0].uuid),    });  };  return (    <>      {}       {showStreamButton && (        <div className="fixed bottom-16 left-1/2  flex -translate-x-1/2 overflow-hidden z-10">          <div className="items-center gap-1">            <p className="text-lg  font-bold text-white">              <Button                className={'w-60 h-40 text-sm flex flex-col items-center !rounded-md'}                onClick={handleRedirect}              >                <IconStreams className="animate-bounce relative w-15 h-20 text-white  " />                <span>Zaƒç√≠t<span className="text-gradient"> eVys√≠l√°n√≠</span> </span>                {}              </Button></p>          </div>        </div>      )}        <section          id="hero"          className="flex flex-col-reverse justify-center items-center gap-x-8 gap-y-4 overflow-hidden py-7.5 md:flex-row md:py-18 bg-cover bg-center"          style={{ backgroundImage: 'url("/assets/homepage.jpg")' }}         >          <div className="max-w-4xl grow mx-auto p-6 rounded-lg ">            <H1 className="mb-6 !text-4xl xl:!text-[75px] text-center md:text-left">              <span className="block [text-shadow:2px_2px_4px_rgba(0,0,0,0.8)]">Z√≠skej sv≈Øj</span>              <span className="block  font-bold [text-shadow:none]">jedineƒçn√Ω v√Ωklad</span>            </H1>            <p className="max-w-xl mx-auto md:mx-0 text-lg leading-relaxed mb-8 [text-shadow:1px_1px_2px_rgba(0,0,0,0.7)]">              {}              Na Spirio se spoj√≠≈° s pr≈Øvodci v tarotu, astrologii, energoterapii a dal≈°√≠ch nauk√°ch.               Najdi sv√©ho pr≈Øvodce pro chv√≠le, kdy pot≈ôebuje≈° zastavit a nadechnout se.            </p>            <div className="flex flex-col sm:flex-row gap-4 items-center md:items-start">                       {}              <Button href={`${route.discover()}#guides`} color="gradient" size="lg" className="min-w-[220px] h-14 text-lg font-semibold">                Najdi sv√©ho pr≈Øvodce              </Button>            </div>          </div>        </section>      <section className="relative py-16">        <BluredCircle style={{ width: '926px', height: '604px' }} className="-bottom-1/2 right-0" />        <div className="container">          <div className="text-center mb-12">            <H2 className="mb-4">Techniky a slu≈æby na≈°ich pr≈Øvodc≈Ø</H2>            <p className="text-lg text-white/70 max-w-2xl mx-auto">              Vyber si z ≈°irok√© nab√≠dky duchovn√≠ch technik a najdi tu pravou cestu pro sebe            </p>          </div>          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6 lg:gap-8">            {(() => {              const items = [                { icon: IconCards, text: 'V√Ωklad karet', k:'vyklad-karet', description: 'Tarot a jin√© karty' },                { icon: IconHoroscope, text: 'Astrologie', k:'astrologie', description: 'Horoskopy a mapy' },                { icon: IconNumerology, text: 'Numerologie', k:'numerologie', description: 'S√≠la ƒç√≠sel' },                { icon: IconLogoFilled, text: 'Spiritu√°ln√≠ kouƒçing', k:'spiritualni-koucink', description: 'Osobn√≠ rozvoj' },                { icon: IconPeopleCircle, text: 'Veden√° meditace', k:'meditace-dech', description: 'Klid a harmonie' },              ];              return items.map(({ icon: Icon, text, k, description }) => (                <Link                  key={k}                  href={{                    pathname: route.techniqueOverview(k),                    hash: k                  }}                  className="group flex flex-col items-center text-center p-6 rounded-lg bg-white/5 hover:bg-white/10 transition-all duration-300 hover:scale-105 border border-transparent hover:border-white/20"                >                  <div className="relative flex items-center justify-center w-20 h-20 mb-4">                    <IconLogoFilled className="w-20 h-20 text-primary-650 group-hover:text-primary-500 transition-colors duration-300" />                    <Icon className="absolute w-10 h-10 text-white" />                  </div>                  <span className="text-lg font-semibold leading-tight mb-2 group-hover:text-gradient transition-colors">                    {text}                  </span>                  <span className="text-sm text-white/60 group-hover:text-white/80 transition-colors">                    {description}                  </span>                </Link>              ));            })()}          </div>          <div className="text-center mt-12">            <Button href="/techniky" color="transparent-white" size="lg" className="min-w-[250px] !rounded-lg">              Zobrazit v≈°echny techniky            </Button>          </div>        </div>      </section>      <section className="py-12 sm:py-16">        <div className="container">          <div className="text-center mb-12">            <H2 className="mb-4">Na≈°i pr≈Øvodci</H2>            <p className="text-lg text-white/70 max-w-2xl mx-auto">              Poznej zku≈°en√© pr≈Øvodce, kte≈ô√≠ ti pomohou naj√≠t odpovƒõdi na ≈æivotn√≠ ot√°zky. Ka≈æd√Ω m√° svou jedineƒçnou cestu a specializaci.            </p>          </div>          <div className="-mx-4">            <GuidesLandingSlider              title=""              text=""            />          </div>          <div className="text-center mt-12">            <Button href={`${route.discover()}#guides`} color="transparent-white" size="lg" className="min-w-[280px] !rounded-lg">              Prohl√©dnout v≈°echny pr≈Øvodce            </Button>          </div>        </div>      </section>      {}      <section className="py-16 bg-white/5 border-t border-white/10">        <div className="container">          <div className="text-center mb-12">            <H2 className="mb-4">Proƒç si vybrat Spirio?</H2>            <p className="text-lg text-white/70 max-w-2xl mx-auto">              Stovky lid√≠ u≈æ na≈°ly s n√°mi svou cestu ke spokojenosti a klidu            </p>          </div>          <div className="grid grid-cols-2 md:grid-cols-4 gap-8 text-center">            <div className="p-6">              <div className="text-4xl font-bold text-gradient mb-3">1500+</div>              <div className="text-white/70 text-lg">Spokojen√Ωch klient≈Ø</div>            </div>            <div className="p-6">              <div className="text-4xl font-bold text-gradient mb-3">25+</div>              <div className="text-white/70 text-lg">Zku≈°en√Ωch pr≈Øvodc≈Ø</div>            </div>            <div className="p-6">              <div className="text-4xl font-bold text-gradient mb-3">24/7</div>              <div className="text-white/70 text-lg">Dostupnost</div>            </div>            <div className="p-6">              <div className="text-4xl font-bold text-gradient mb-3">4.8‚òÖ</div>              <div className="text-white/70 text-lg">Pr≈Ømƒõrn√© hodnocen√≠</div>            </div>          </div>        </div>      </section>      {}      {}      {}      {}      {}      <section className="mb-16 md:mb-24">        <div className="container py-16">          <div className="text-center mb-12">            <H2 className="mb-4">Jak to funguje?</H2>            <div className="max-w-3xl mx-auto">              <div className="mb-6 text-xl font-700 text-gradient">                Zalo≈æ si √∫ƒçet zdarma a z√≠skej dvojn√°sobek minut na prvn√≠ konzultaci              </div>              <p className="text-lg text-white/70 mb-4">                Jednoduch√© kroky k tv√© prvn√≠ konzultaci s pr≈Øvodcem              </p>              <div className="bg-white/10 rounded-lg p-4 mt-6">                <p className="text-sm text-white/80">                  üí° <strong>Tip:</strong> Prvn√≠ n√°kup = bonus 2x tolik minut zdarma                </p>              </div>            </div>          </div>          <HowItWorksModule />          <div className="text-center mt-12">            <Button href={route.registration()} color="gradient" size="lg" className="min-w-[300px] h-16 text-lg font-semibold !rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105">              Zaƒç√≠t s bonus minutami zdarma            </Button>            <p className="text-sm text-white/60 mt-3">              ‚úì ≈Ω√°dn√© z√°vazky ‚Ä¢ ‚úì Zru≈°iteln√© kdykoliv ‚Ä¢ ‚úì Bezpeƒçn√© platby            </p>          </div>        </div>      </section>    </>  );}Home.getLayout = function getLayout(page: React.ReactElement) {  return <Layout>{page}</Layout>;};export async function getServerSideProps() {  return {};}