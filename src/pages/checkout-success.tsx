import Layout from '@/components/layout/Layout';import Button from '@/components/UI/button/Button';import { H4 } from '@/components/UI/typography/Typography';import useUser from '@/features/user/hooks/useUser';import useGuide from '@/hooks/data/useGuide';import { route } from '@/services/routes';import { useRouter } from 'next/router';import React from 'react';import { DiscoverDetailShort } from './discover/[slug]';import { useEffect } from 'react';import api from '@/services/api';export default function CheckoutSuccess() {  const router = useRouter();  const minutes = router.query.minutes_count;  const slug = router.query.slug;  const paidVideoId = router.query.paid_video_id as string | undefined;  const { user } = useUser();  const { data } = useGuide(slug as string);  useEffect(() => {    (async () => {      if (paidVideoId && user) {        try {          await api.post('/paid_videos/confirm', { paid_video_id: Number(paidVideoId) });          router.replace(`/video/${paidVideoId}`);        } catch {}      }    })();  }, [paidVideoId, user]);  return (    <div className="container flex min-h-[calc(100vh-var(--topbar-height))] max-w flex-col items-center justify-center pb-32 pt-12">      {}      {}      <H4 className="mb-4 text-center">Platba proběhla úspěšně</H4>      {user?.role === 'host' ? (        <>          <div className="text-center text-sm mb-6">            <p>              Děkujeme! Tvůj HOST účet byl aktivován. Zároveň jsme ti poslali email s potvrzením a instrukcemi.            </p>            <p className="text-red-600 font-medium mt-4">              Pokud registraci nedokončíš do 2 hodin, účet bude smazán – včetně všech kreditů, které jsou k účtu navázány.            </p>            {}          </div>          {}          {data && slug && (            <div>              <p className="text-center text-xl mt-4">                Průvodce, kterého jsi si vybral:              </p>              <DiscoverDetailShort data={data} slug={slug as string}  ></DiscoverDetailShort>              {}            </div>          )}          {}        </>      ) : (        <>          <p className="text-center text-sm">            Děkujeme! Bylo ti připsáno:          </p>          {minutes && (            <div className="mt-6 flex items-center justify-center">              <div className="w-32 h-32 flex flex-col items-center justify-center rounded-full border-4 border-success text-success text-xl font-bold shadow-lg text-center px-2">                <div>+{minutes} minut</div>                {!user?.first_payed && (                  <div className="text-sm text-orange-500 mt-1">                    + {minutes} extra minut                  </div>                )}              </div>            </div>          )}          <Button href={route.discover()} className="mt-10" color="gradient">            Pokračovat do aplikace          </Button>        </>      )}    </div>  );}CheckoutSuccess.getLayout = function getLayout(page: React.ReactElement) {  return <Layout hideFooter>{page}</Layout>;};export async function getServerSideProps() {  return {};}