import useSWR from 'swr';import api from '@/services/api';import { PaidVideo, PaidVideoPurchase } from '../types';export function usePaidVideos(guide_profile_id?: string | number) {  const key = guide_profile_id ? `/paid_videos?guide_profile_id=${guide_profile_id}` : `/paid_videos`;  const { data, error, isLoading, mutate } = useSWR<{ data: PaidVideo[] }>(key, async (_url: string) => {    const res = await api.get(`/paid_videos/index`, { params: { guide_profile_id } });    return res.data;  });  return { videos: data?.data ?? [], error, isLoading, mutate };}export async function purchasePaidVideo(paid_video_id: number) {  const res = await api.post('/paid_videos/purchase', { paid_video_id });  return res.data as { data: PaidVideoPurchase; checkout_url: string };}export async function confirmPaidVideo(paid_video_id: number) {  const res = await api.post('/paid_videos/confirm', { paid_video_id });  return res.data as { data: PaidVideoPurchase };}export async function checkPaidVideoAccess(paid_video_id: number) {  const res = await api.get('/paid_videos/access', { params: { paid_video_id } });  return res.data as { data: { has_access: boolean } };}export async function createPaidVideo(data: Partial<PaidVideo>) {  const res = await api.post('/paid_videos/store', data);  return res.data as { data: PaidVideo };}export async function updatePaidVideo(id: number, data: Partial<PaidVideo>) {  const res = await api.post('/paid_videos/update', { ...data, id });  return res.data as { data: PaidVideo };}