import { GuideProfileType } from '@/features/user/types/user';import api from '@/services/api';import { transformJSONAPIData } from '@/services/utils';import useSWR from 'swr';const useGuide = (slug: string, fallbackData?: GuideProfileType) => {  const data = useSWR(    ['guide', slug],    slug      ? () => {          return getGuide(slug);        }      : null,    {      revalidateOnMount: true,      revalidateOnFocus: true,      fallbackData,    },  );  return data;};export default useGuide;export const getGuide = (slug?: string) => {  return api    .get('/guide_profiles/showWeb', {      params: { slug },    })    .then(async (res) => {      const guide = transformJSONAPIData<GuideProfileType>(res.data).data;      return guide;    });};