import api from '@/services/api';import { serializeJsonToFormData, transformJSONAPIData } from '@/services/utils';import useSWR from 'swr';const usePlans = () => {  const data = useSWR(    ['plans'],    getPlans,    {      revalidateOnMount: true,      revalidateOnFocus: true,    },  );  return { ...data, plans: data.data };};export default usePlans;export const getPlans = () => {  return api    .get('/plans/index', {      params: { sort: ['id'] },    })    .then(async (res) => {      const streams = transformJSONAPIData<PlanType[]>(res.data).data;      return streams;    });};export const checkoutPlan = (plan_id: string, guide_id: string) => {  return api.post('/checkouts/store', serializeJsonToFormData({ plan_id, guide_id })).then(async (res) => {    const data = transformJSONAPIData<{ id: string }>(res.data).data;    return data;  });};export const checkoutExact = (title: string, minutes: number) => {  return api.post('/checkouts/storeExact', serializeJsonToFormData({ title, minutes })).then(async (res) => {    const data = transformJSONAPIData<{ id: string }>(res.data).data;    return data;  });};export const getCheckout = (id: string, discount: number) => {  return api    .get('/checkouts/show', {      params: { id },    })    .then(async (res) => {      const data = transformJSONAPIData<{        checkout_id: string;        checkout_url: string;        created_at: string;        plan_id: string;        price: number;        status: number;        title: string;        updated_at: string;      }>(res.data).data;      data.price = data.price - (data.price * discount) / 100;      return data;    });};export type PlanType = {  free_minutes_count: number | null;  id: string;  minutes_count: number;  price: number;  title: string;};